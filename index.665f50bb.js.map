{"mappings":"AAAA,MACMA,EAA2B,CAC/BC,KAAM,UACNC,UAAW,QACXC,UAAW,KACXC,QAAS,6BACTC,QAAS,GACTC,KAAM,IAOFC,OAHcC,IAAlBC,OAAOC,aAAkDF,IAA1BC,OAAOC,OAAOC,QAI3CF,OAAOC,OAAOC,QAAQC,MACtB,CACEC,IAAG,CAAGC,EAAGC,IAAaA,EAASf,GAC/BgB,IAAMF,WAwBZG,EALgB,uBAhBWC,SAClB,IAAIC,SAASC,IAClBb,EAAcM,IAAI,CAvBa,+BAuBkBQ,SACJb,IAAvCa,EAAiC,2BACnCD,EAAQpB,GAERoB,EAAQE,KAAKC,MAAMF,EAAiC,yDAMjCH,MAAUM,IACnCjB,EAAcS,IAAI,CAAES,2BAA4BD,MChClD,MACME,EACE,kEADFA,EAEO,uDAFPA,EAGO,4DAHPA,EAIK,2DAJLA,EAMF,kGA8BEC,EAAyBT,UAC7B,MAAMU,QAA2BX,EAAQY,wBACnCC,GAAa,IAAIC,MAAOC,eAE9B,GAAIJ,EAAmBtB,OAASwB,EAC9B,OAAOF,EAGT,IACE,MAAMJ,OApCuBN,WAC/B,MAAMe,EAAsB,IAAIC,QAXN,mDAYpBC,QAAiBC,MAAMH,GACvBI,QAAqBF,EAASG,OAEpC,IAAIC,GAAkB,IAAIC,WAAYC,gBACpCJ,EACA,aAGF,MAAMK,EAAqBC,GAClBJ,EAAgBK,cAAcD,GAAOE,UAG9C,MAAO,CACL5C,KAAMyC,EAAkBhB,GACxBxB,UAAWwC,EAAkBhB,GAC7BvB,UAAWuC,EAAkBhB,GAC7BtB,QAASsC,EAAkBhB,GAC3BrB,QAASqC,EAAkBhB,GAC3BpB,MAAM,IAAIyB,MAAOC,iBAgBUc,GAE3B,OADA7B,EAAQ8B,sBAAsBvB,GACvBA,EACP,MACA,OAAOI,ICnDLoB,EAAKC,GACFC,SAASC,eAAeF,kBCoBlBG,IAXclC,OAAUM,IACrC,MACM6B,GADa,IAAItB,MAAOC,iBACIR,EAAalB,KAC/C0C,EAPmB,aAOHM,UAAYD,EAAa7B,EAAalB,KALvC,WAMf0C,EAZmB,aAYHM,UAAY9B,EAAavB,KACzC+C,EAZwB,aAYHM,UAAY9B,EAAatB,UAC9C8C,EAZwB,kBAYHM,UAAY9B,EAAarB,UAC9C6C,EAZsB,gBAYHH,UAAYrB,EAAapB,QAC5C4C,EAXsB,gBAWHH,UAAYrB,EAAanB,SAK5CkD,OAD2B5B,KAI7BlB,OAAO+C,OAAMtC,gBACLkC","sources":["src/storage.js","src/wordy.js","src/util.js","src/script.js"],"sourcesContent":["const RECENT_WORD_OF_THE_DAY_KEY = 'RECENT_WORD_OF_THE_DAY_KEY'\nconst FALLBACK_WORD_OF_THE_DAY = {\n  word: 'Offline',\n  attribute: 'Error',\n  syllables: 'ðŸ’­',\n  meaning: 'You are currently offline.',\n  example: '',\n  date: '',\n}\n\nconst isChromeStorageAvailable =\n  window.chrome !== undefined && window.chrome.storage !== undefined\n// Chrome may not be available on host.\n// Fallback to noop storage if chrome is not available.\nconst chromeStorage = isChromeStorageAvailable\n  ? window.chrome.storage.local\n  : {\n      get: (_, callback) => callback(FALLBACK_WORD_OF_THE_DAY),\n      set: (_) => {},\n    }\n\nconst getRecentWordOfTheDay = async () => {\n  return new Promise((resolve) => {\n    chromeStorage.get([RECENT_WORD_OF_THE_DAY_KEY], (result) => {\n      if (result[RECENT_WORD_OF_THE_DAY_KEY] === undefined) {\n        resolve(FALLBACK_WORD_OF_THE_DAY)\n      } else {\n        resolve(JSON.parse(result[RECENT_WORD_OF_THE_DAY_KEY]))\n      }\n    })\n  })\n}\n\nconst setRecentWordOfTheDay = async (wordOfTheDay) => {\n  chromeStorage.set({ RECENT_WORD_OF_THE_DAY_KEY: wordOfTheDay })\n}\n\nconst storage = {\n  getRecentWordOfTheDay,\n  setRecentWordOfTheDay,\n}\n\nexport default storage\n","import storage from './storage'\n\nconst WORD_OF_THE_DAY_URL = 'https://www.merriam-webster.com/word-of-the-day'\nconst WORD_OF_THE_DAY_QUERY = {\n  word: 'div.quick-def-box div.word-header div.word-and-pronunciation h1',\n  attribute: 'div.quick-def-box div.word-attributes span.main-attr',\n  syllables: 'div.quick-def-box div.word-attributes span.word-syllables',\n  meaning: 'div.wod-article-container div.wod-definition-container p',\n  example:\n    'div.wod-article-container div.wod-definition-container div.wotd-examples div.left-content-box p',\n}\n\nconst getWordOfTheDayOverInternet = async () => {\n  const wordOfTheDayRequest = new Request(WORD_OF_THE_DAY_URL)\n  const response = await fetch(wordOfTheDayRequest)\n  const responseText = await response.text()\n\n  let domFromResponse = new DOMParser().parseFromString(\n    responseText,\n    'text/html'\n  )\n\n  const innerTextForQuery = (query) => {\n    return domFromResponse.querySelector(query).innerHTML\n  }\n\n  return {\n    word: innerTextForQuery(WORD_OF_THE_DAY_QUERY.word),\n    attribute: innerTextForQuery(WORD_OF_THE_DAY_QUERY.attribute),\n    syllables: innerTextForQuery(WORD_OF_THE_DAY_QUERY.syllables),\n    meaning: innerTextForQuery(WORD_OF_THE_DAY_QUERY.meaning), // TODO: Get the complete meaning\n    example: innerTextForQuery(WORD_OF_THE_DAY_QUERY.example),\n    date: new Date().toDateString(),\n  }\n}\n\n// Returns today's or recently archived word of the day.\n// If the extension is online it will return today's word of the day.\n// Else if extension is offline then it will return recently archived word of the day.\nconst getMostRecentWordOfTheDay = async () => {\n  const recentWordOfTheDay = await storage.getRecentWordOfTheDay()\n  const todaysDate = new Date().toDateString()\n\n  if (recentWordOfTheDay.date === todaysDate) {\n    return recentWordOfTheDay\n  }\n\n  try {\n    const wordOfTheDay = await getWordOfTheDayOverInternet()\n    storage.setRecentWordOfTheDay(wordOfTheDay)\n    return wordOfTheDay\n  } catch {\n    return recentWordOfTheDay\n  }\n}\n\nexport { getMostRecentWordOfTheDay }\n","// Short hand for getElementById\nconst $ = (id) => {\n  return document.getElementById(id)\n}\n\nexport { $ }\n","import { getMostRecentWordOfTheDay } from './wordy'\nimport { $ } from './util'\n\nconst WORD_MAIN_ID = 'word-main'\nconst WORD_ATTRIBUTE_ID = 'word-attr'\nconst WORD_SYLLABLES_ID = 'word-syllables'\nconst WORD_MEANING_ID = 'word-meaning'\nconst WORD_DATE_ID = 'word-date'\nconst WORD_EXAMPLE_ID = 'word-example'\nconst ARCHIVED = 'Archived'\n\nconst updateUIForWordOfTheDay = async (wordOfTheDay) => {\n  const todaysDate = new Date().toDateString()\n  const isArchived = todaysDate !== wordOfTheDay.date\n  $(WORD_DATE_ID).innerText = isArchived ? wordOfTheDay.date : ARCHIVED\n  $(WORD_MAIN_ID).innerText = wordOfTheDay.word\n  $(WORD_ATTRIBUTE_ID).innerText = wordOfTheDay.attribute\n  $(WORD_SYLLABLES_ID).innerText = wordOfTheDay.syllables\n  $(WORD_MEANING_ID).innerHTML = wordOfTheDay.meaning\n  $(WORD_EXAMPLE_ID).innerHTML = wordOfTheDay.example\n}\n\nasync function onWindowLoad() {\n  const wordOfTheDay = await getMostRecentWordOfTheDay()\n  updateUIForWordOfTheDay(wordOfTheDay)\n}\n\nwindow.onload = async () => {\n  await onWindowLoad()\n}\n"],"names":["$744d2dad838f829a$var$FALLBACK_WORD_OF_THE_DAY","word","attribute","syllables","meaning","example","date","$744d2dad838f829a$var$chromeStorage","undefined","window","chrome","storage","local","get","_","callback","set","$744d2dad838f829a$export$2e2bcd8739ae039","async","Promise","resolve","result","JSON","parse","wordOfTheDay","RECENT_WORD_OF_THE_DAY_KEY","$6e7b0d9c13914567$var$WORD_OF_THE_DAY_QUERY","$6e7b0d9c13914567$export$fa39ec42ec99c4e1","recentWordOfTheDay","getRecentWordOfTheDay","todaysDate","Date","toDateString","wordOfTheDayRequest","Request","response","fetch","responseText","text","domFromResponse","DOMParser","parseFromString","innerTextForQuery","query","querySelector","innerHTML","$6e7b0d9c13914567$var$getWordOfTheDayOverInternet","setRecentWordOfTheDay","$ffe5336b9f78dcb3$export$3d8c2f653ac9d0b9","id","document","getElementById","$b63be9b0371e788c$var$onWindowLoad","isArchived","innerText","$b63be9b0371e788c$var$updateUIForWordOfTheDay","onload"],"version":3,"file":"index.665f50bb.js.map"}